<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Model Comparison Report</title>
    <style>
      body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; margin: 24px; color: #111; }
      .container { max-width: 1200px; margin: 0 auto; }
      h1 { margin: 0 0 4px; }
      h2 { margin: 16px 0 8px; }
      .meta { color: #666; margin-bottom: 16px; }
      table { border-collapse: collapse; width: 100%; margin: 8px 0 16px; }
      th, td { border: 1px solid #e5e7eb; padding: 6px 8px; text-align: left; }
      th { background: #fafafa; }
      .muted { color: #666; }
      .callout { padding: 8px 10px; border: 1px solid #e5e7eb; border-radius: 6px; background: #fafafa; }
      details { border: 1px solid #e5e7eb; border-radius: 6px; padding: 8px 10px; margin: 12px 0; background: #fff; }
      details > summary { cursor: pointer; font-weight: 600; }
      .grid { display: grid; grid-template-columns: 1fr; gap: 16px; }
      @media (min-width: 900px) { .grid { grid-template-columns: 1fr 1fr; } }
    </style>
    <script>
      // Optional helper to toggle all sections
      function toggleAll(open) {
        document.querySelectorAll('details').forEach(d => { d.open = open; });
      }
    </script>
  </head>
  <body>
    <div class="container">
      {% if not aggregates %}
        <h1>Model Comparison Report</h1>
        <div class="callout">No aggregates available. Run the evaluation to generate <code>results/summary_latest.json</code>.</div>
      {% else %}
        <h1>Model Comparison Report</h1>
        <div class="meta">Generated: {{ aggregates.timestamp }}</div>

        <div class="callout">
          <strong>Models:</strong> {{ aggregates.models | join(', ') }}
        </div>

        <details open>
          <summary>Leaderboards</summary>
          <table>
            <tr><th>Category</th><th>Model</th></tr>
            <tr><td>Best Task Score</td><td>{{ aggregates.best_in_class.best_task_score }}</td></tr>
            <tr><td>Best Success Rate</td><td>{{ aggregates.best_in_class.best_success_rate }}</td></tr>
            <tr><td>Best Tool Accuracy</td><td>{{ aggregates.best_in_class.best_tool_accuracy }}</td></tr>
            <tr><td>Fastest Response</td><td>{{ aggregates.best_in_class.fastest_response }}</td></tr>
          </table>
        </details>

        {% if aggregates.pipeline and aggregates.pipeline.extraction and aggregates.pipeline.verification and aggregates.pipeline.execution %}
        <details open>
          <summary>Phase Leaderboards (E / V / X)</summary>
          <div class="callout">Winners per phase by average score.</div>
          <table>
            <tr><th>Phase</th><th>Winner</th></tr>
            {% set e = aggregates.pipeline.extraction %}
            {% set v = aggregates.pipeline.verification %}
            {% set x = aggregates.pipeline.execution %}
            {% if e %}
            <tr>
              <td>Extraction</td>
              <td>
                {% set ns = namespace(winner='', score=-1) %}
                {% for model, stats in e.items() %}
                  {% set score = stats.tool_f1 | default(0) %}
                  {% if score > ns.score %}
                    {% set ns.winner = model %}
                    {% set ns.score = score %}
                  {% endif %}
                {% endfor %}
                {{ ns.winner }}
              </td>
            </tr>
            {% endif %}
            {% if v %}
            <tr>
              <td>Verification</td>
              <td>
                {% set ns = namespace(winner='', score=-1) %}
                {% for model, stats in v.items() %}
                  {% set score = stats.acceptance_f1 | default(0) %}
                  {% if score > ns.score %}
                    {% set ns.winner = model %}
                    {% set ns.score = score %}
                  {% endif %}
                {% endfor %}
                {{ ns.winner }}
              </td>
            </tr>
            {% endif %}
            {% if x %}
            <tr>
              <td>Execution</td>
              <td>
                {% set ns = namespace(winner='', score=-1) %}
                {% for model, stats in x.items() %}
                  {% set score = stats.success_rate | default(0) %}
                  {% if score > ns.score %}
                    {% set ns.winner = model %}
                    {% set ns.score = score %}
                  {% endif %}
                {% endfor %}
                {{ ns.winner }}
              </td>
            </tr>
            {% endif %}
          </table>
        </details>
        {% endif %}

        <details open>
          <summary>Per-model Stats</summary>
          <table>
            <tr>
              <th>Model</th>
              <th>Success Rate</th>
              <th>Tool Accuracy</th>
              <th>Avg Time (s)</th>
              <th>Tool Usage F1</th>
              <th>Total Tests</th>
            </tr>
            {% for model, stats in aggregates.model_stats.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.avg_success_rate * 100) | round(1) }}%</td>
              <td>{{ (stats.avg_tool_accuracy * 100) | round(1) }}%</td>
              <td>{{ stats.avg_response_time_s | round(2) }}</td>
              <td>{{ (stats.avg_tool_usage.f1 * 100) | round(1) }}%</td>
              <td>{{ stats.total_tests }}</td>
            </tr>
            {% endfor %}
          </table>
        </details>

        {% if aggregates.format_stats %}
        <details open>
          <summary>Formats</summary>
          <div class="callout">Per-format performance across all models.</div>
          <table>
            <tr>
              <th>Format</th>
              <th>Success Rate</th>
              <th>Tool Accuracy</th>
              <th>Avg Time (s)</th>
              <th>Tool Usage F1</th>
              <th>Total Tests</th>
              <th>Retry Rate</th>
              <th>Models</th>
            </tr>
            {% for fkey, fstats in aggregates.format_stats.items() %}
            <tr>
              <td>{{ fstats.format_name or fkey }}</td>
              <td>{{ (fstats.avg_success_rate * 100) | default(0) | round(1) }}%</td>
              <td>{{ (fstats.avg_tool_accuracy * 100) | default(0) | round(1) }}%</td>
              <td>{{ (fstats.avg_response_time_s) | default(0) | round(2) }}</td>
              <td>{{ (fstats.avg_tool_usage_f1 * 100) | default(0) | round(1) }}%</td>
              <td>{{ fstats.total_tests | default(0) }}</td>
              <td>{{ (fstats.retry_rate * 100) | default(0) | round(1) }}%</td>
              <td class="muted">{{ (fstats.models or []) | join(', ') }}</td>
            </tr>
            {% endfor %}
          </table>
        </details>
        {% endif %}

        {% set rt = aggregates.retry_stats.tests_with_retries | default(0) %}
        {% set tra = aggregates.retry_stats.total_retry_attempts | default(0) %}
        {% if (rt > 0) or (tra > 0) %}
        <details open>
          <summary>Retry Summary</summary>
          <table>
            <tr>
              <th>Total Tests</th>
              <th>Tests with Retries</th>
              <th>Total Retry Attempts</th>
              <th>Retry Rate</th>
              <th>Avg Retries/Test (Retried)</th>
            </tr>
            <tr>
              <td>{{ aggregates.retry_stats.total_tests }}</td>
              <td>{{ aggregates.retry_stats.tests_with_retries }}</td>
              <td>{{ aggregates.retry_stats.total_retry_attempts }}</td>
              <td>
                {% set tt = aggregates.retry_stats.total_tests %}
                {{ ( (rt / tt) * 100 ) | round(1) if tt > 0 else 0 }}%
              </td>
              <td>{{ (tra / rt) | round(1) if rt > 0 else 0 }}</td>
            </tr>
          </table>
          {% if aggregates.retry_stats.retry_reasons %}
          <table>
            <tr><th>Retry Reason</th><th>Count</th><th>Percentage</th></tr>
            {% set ns = namespace(total=0) %}
            {% for _, c in aggregates.retry_stats.retry_reasons.items() %}{% set ns.total = ns.total + c %}{% endfor %}
            {% for reason, count in aggregates.retry_stats.retry_reasons | dictsort(by='value', reverse=true) %}
              <tr>
                <td>{{ reason }}</td>
                <td>{{ count }}</td>
                <td>{{ ( (count / ns.total) * 100 ) | round(1) if ns.total > 0 else 0 }}%</td>
              </tr>
            {% endfor %}
            <tr>
              <td><strong>Total</strong></td>
              <td><strong>{{ ns.total }}</strong></td>
              <td><strong>{{ 100 if ns.total > 0 else 0 }}%</strong></td>
            </tr>
          </table>
          {% endif %}
        </details>
        {% endif %}

        {% if aggregates.parameter_extraction and aggregates.parameter_extraction.model_averages %}
        <details open>
          <summary>Parameter Extraction</summary>
          <div class="callout">Best Model: <strong>{{ aggregates.parameter_extraction.best_model }}</strong> ({{ (aggregates.parameter_extraction.best_score * 100) | round(1) }}% semantic accuracy)</div>
          <table>
            <tr>
              <th>Model</th>
              <th>Semantic</th>
              <th>Title</th>
              <th>Priority</th>
              <th>Date</th>
              <th>Completeness</th>
              <th>Tests</th>
            </tr>
            {% for model, stats in aggregates.parameter_extraction.model_averages.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.semantic_accuracy * 100) | round(1) }}%</td>
              <td>{{ (stats.title_accuracy * 100) | round(1) }}%</td>
              <td>{{ (stats.priority_accuracy * 100) | round(1) }}%</td>
              <td>{{ (stats.date_accuracy * 100) | round(1) }}%</td>
              <td>{{ (stats.completeness * 100) | round(1) }}%</td>
              <td>{{ stats.tests }}</td>
            </tr>
            {% endfor %}
          </table>
        </details>
        {% endif %}

        {% if aggregates.workflow_planning and aggregates.workflow_planning.model_averages %}
        <details open>
          <summary>Workflow Planning</summary>
          <div class="callout">Best Model: <strong>{{ aggregates.workflow_planning.best_model }}</strong> ({{ (aggregates.workflow_planning.best_score * 100) | round(1) }}% average core score)</div>
          <table>
            <tr>
              <th>Model</th>
              <th>Sequence</th>
              <th>Dependency</th>
              <th>Efficiency</th>
              <th>Context Usage</th>
              <th>Error Anticipation</th>
              <th>Completeness</th>
              <th>Tests</th>
            </tr>
            {% for model, stats in aggregates.workflow_planning.model_averages.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.sequence_logic * 100) | round(1) }}%</td>
              <td>{{ (stats.dependency_awareness * 100) | round(1) }}%</td>
              <td>{{ (stats.efficiency * 100) | round(1) }}%</td>
              <td>{{ (stats.context_usage * 100) | round(1) }}%</td>
              <td>{{ (stats.error_anticipation * 100) | round(1) }}%</td>
              <td>{{ (stats.workflow_completeness * 100) | round(1) }}%</td>
              <td>{{ stats.tests }}</td>
            </tr>
            {% endfor %}
          </table>
        </details>
        {% endif %}

        {% if aggregates.pipeline %}
        <details open>
          <summary>Pipeline Leaderboards (Extraction / Verification / Execution)</summary>
          {% if aggregates.pipeline.best_in_class %}
          <div class="callout">
            <strong>Pipeline Best-in-Class</strong>
            <div class="muted">Majority-of-steps wins; tie-breaker: average rank across E/V/X.</div>
            <table>
              <tr><th>Winner</th><th>Details</th></tr>
              <tr>
                <td>{{ aggregates.pipeline.best_in_class.winner }}</td>
                <td>
                  {% if aggregates.pipeline.best_in_class.details %}
                    {{ aggregates.pipeline.best_in_class.details }}
                  {% else %}
                    Computed from step leaderboards.
                  {% endif %}
                </td>
              </tr>
            </table>
          </div>
          {% endif %}
          {% if aggregates.pipeline.extraction %}
          <h3 style="margin: 8px 0 4px;">Extraction</h3>
          <table>
            <tr><th>Model</th><th>Tool P/R/F1</th><th>Order Adherence</th><th>Parameter Readiness</th></tr>
            {% for model, stats in aggregates.pipeline.extraction.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.tool_f1 * 100) | default(0) | round(1) }}%</td>
              <td>{{ (stats.order_adherence * 100) | default(0) | round(1) }}%</td>
              <td>{{ (stats.parameter_readiness * 100) | default(0) | round(1) }}%</td>
            </tr>
            {% endfor %}
          </table>
          {% endif %}

          {% if aggregates.pipeline.verification %}
          <h3 style="margin: 8px 0 4px;">Verification</h3>
          <table>
            <tr><th>Model</th><th>Acceptance F1</th><th>Hallucination P/R/F1</th></tr>
            {% for model, stats in aggregates.pipeline.verification.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.acceptance_f1 * 100) | default(0) | round(1) }}%</td>
              <td>{{ (stats.hallucination_f1 * 100) | default(0) | round(1) }}%</td>
            </tr>
            {% endfor %}
          </table>
          {% endif %}

          {% if aggregates.pipeline.execution %}
          <h3 style="margin: 8px 0 4px;">Execution (Vetted)</h3>
          <table>
            <tr><th>Model</th><th>Success Rate</th><th>Tool Accuracy</th><th>Tool Usage F1</th></tr>
            {% for model, stats in aggregates.pipeline.execution.items() %}
            <tr>
              <td>{{ model }}</td>
              <td>{{ (stats.success_rate * 100) | default(0) | round(1) }}%</td>
              <td>{{ (stats.tool_accuracy * 100) | default(0) | round(1) }}%</td>
              <td>{{ (stats.tool_usage_f1 * 100) | default(0) | round(1) }}%</td>
            </tr>
            {% endfor %}
          </table>
          {% endif %}
        </details>
        {% endif %}

        {% if aggregates.scenarios %}
        <details open>
          <summary>Top Issues</summary>
          <div class="callout">Scenarios with low average success across models, plus notable slowness.</div>
          <table>
            <tr><th>Scenario</th><th>Avg Success</th><th>Models < 60%</th></tr>
            {% for scenario_name, per_model in aggregates.scenarios.items() %}
              {% set ns = namespace(total=0.0, n=0, below=0) %}
              {% for model, m in per_model.items() %}
                {% set ns.total = ns.total + (m.success_rate | default(0)) %}
                {% set ns.n = ns.n + 1 %}
                {% if (m.success_rate | default(0)) < 0.6 %}
                  {% set ns.below = ns.below + 1 %}
                {% endif %}
              {% endfor %}
              {% set avg = (ns.total / ns.n) if ns.n > 0 else 0 %}
              {% if avg < 0.7 %}
                <tr>
                  <td>{{ scenario_name.replace('_', ' ') }}</td>
                  <td>{{ (avg * 100) | round(1) }}%</td>
                  <td>{{ ns.below }}</td>
                </tr>
              {% endif %}
            {% endfor %}
          </table>

          <table>
            <tr><th>Scenario</th><th>Avg Time (s)</th></tr>
            {% for scenario_name, per_model in aggregates.scenarios.items() %}
              {% set ns = namespace(total=0.0, n=0) %}
              {% for model, m in per_model.items() %}
                {% set ns.total = ns.total + (m.avg_time_s | default(0)) %}
                {% set ns.n = ns.n + 1 %}
              {% endfor %}
              {% set avg_t = (ns.total / ns.n) if ns.n > 0 else 0 %}
              {% if avg_t > 5 %}
                <tr>
                  <td>{{ scenario_name.replace('_', ' ') }}</td>
                  <td>{{ avg_t | round(2) }}</td>
                </tr>
              {% endif %}
            {% endfor %}
          </table>
        </details>
        {% endif %}

        {% if aggregates.provenance %}
        <details>
          <summary>Provenance</summary>
          <table>
            <tr><th>Anchor Date</th><td>{{ aggregates.provenance.anchor_date }}</td></tr>
            <tr><th>Phase</th><td>{{ aggregates.provenance.phase }}</td></tr>
            <tr><th>Request Options</th><td>temp={{ aggregates.provenance.ollama_options.temperature }}, seed={{ aggregates.provenance.ollama_options.seed }}, top_p={{ aggregates.provenance.ollama_options.top_p }}, top_k={{ aggregates.provenance.ollama_options.top_k }}</td></tr>
          </table>
        </details>
        {% endif %}

        {% if aggregates.scenarios %}
        <details>
          <summary>Scenario Breakdown</summary>
          <div class="grid">
            {% for scenario_name, per_model in aggregates.scenarios.items() %}
              <div>
                <h3 style="margin: 4px 0 6px;">{{ scenario_name.replace('_', ' ') }}</h3>
                <table>
                  <tr>
                    <th>Model</th>
                    <th>Success</th>
                    <th>Tool Accuracy</th>
                    <th>Avg Time (s)</th>
                  </tr>
                  {% for model, m in per_model.items() %}
                  <tr>
                    <td>{{ model }}</td>
                    <td>{{ (m.success_rate * 100) | round(1) }}%</td>
                    <td>{{ (m.tool_accuracy * 100) | round(1) }}%</td>
                    <td>{{ (m.avg_time_s) | round(2) }}</td>
                  </tr>
                  {% endfor %}
                </table>
              </div>
            {% endfor %}
          </div>
        </details>
        {% endif %}

        <div class="muted">No external assets. Inline CSS/JS only.</div>
      {% endif %}
    </div>
  </body>
  </html>



