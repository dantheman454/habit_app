Keep in mind:
-User behaviours
    *current task list and google calendar usage
    *Daily/Weekly check in 
    *Task allocation/planning
    *Event tracking/planning
    *Habit/Goal Tracking
-Core abstractions/entities (only do habits but do goal and identity based???)
    *task: A distinct action with a well defined completion criteria
        >dishes, homework, 
    *event: a time period where I must be at a specific place
        >classes, appointments, vacations
    *habit: a set of tasks or events that are consistent with identity or goal
        >gym, pills, meal prepping, weed(self medicating)(need to use Huberman's method to make and break habits)
    *goal: goal based habits???
        >understand greasy hair, track supplements and food intake, sobriety for extended period of time??, fix memory issue(s)

    

Get done asap:   
    -Delete and remake the unit tests
    -spam flutter analyze until no issues found and functionality is preserved
    -SCAN FOR ANY BACKDOORS/EVIL CODE PATTERNS
    -Look into licenses of anything this project uses 

Before career fair:
    -Get habits implemented and working 
        >streaks
        >skipped days
        >Use Huberman protocals as basis for how habits function
    -Get Mr Assister up and running smoothly
        >Make sure his tool calling works
        >Clean up the UI (have it always show thinking but in a dropdown box thing)
    -Place work and school schedule in (still keep using gc and reminders until this system is rock solid with regular backups and good UX)

    


Next:
    -Get assistant pipeline working for basic chats about events and tasks (maybe basic functions??)
        *SIMPLIFY!!!!/solidify pipeline and take out the different model constants
        *Look into pydanticAI framework
        *Fix the context issue(s)
            >More than three chats causes '000000...0000' due to context overflow??
        *Use attention sinks in the context; these models dump attention to the first tokens
        *Make sure context and prompting is solid; Make sure it doesn't get fed same context twice!!!! Track if the context has been put already
        *Choose between normal qwen3 and coder version (leaning towards coding just for accuracy?)
        *have buttons for quick routes (daily overview, weekly planning, etc)
        *Wrap text box and make it display the markdown properly
    -Modularize main and clean up/optimize the flutter directory??? (if access to GPT-5 again)
    -have method to be able to do minimal tasks from phone. Remote client that updates locally until connected to server?



    


Long term:
-Better utilize memory for project development!!!
    >Keep guide files 
    >Set up project protocals for Cursor to auto follow
    >Play around with different prompts to see what works best (qualitativly and qualitativly)
-Scratchpad for Mr Assister
-ask mitchell if I could fine tune models on the dgx (figure out best way to do this)
-kaizen journal integration somehow?
-QTOT
-HRM


