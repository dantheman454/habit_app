Keep in mind:
-Have full functionality (BEFORE SCHOOL STARTS)so I can get my actual todos and events in




Actionable:
-get a todo list app up and running fully and soundly (must have same functionality as reminders app and google calendar)
    *Make todos UI better (fix it from being so snappy when deleting todos or going between tabs)
        >Use google calendar and reminders app for inspo
        >Make sure to display the month and have the toggle switch for Day/Week/Month
    *Add in a third option for tasks to have 'skipped/(didn't do it)'
    *Get repeated tasks and events working properly
    *JUST FOCUS ON TODOS and EVENTS (Habits and goals can be buffed out later once solid foundation is laid)
    *Clear out database and insert real todos and events coming up (still use reminders app and google calendar for now to keep parity and have fail safe)


-Make a Product Requirments Document

-get behaviours the app needs to faciliate (use notebookLM for this and make a detailed spec for the application; Frontend, backend, and everything needed to fully make a prototype of this app)
    *Daily/Weekly check in 
    *Task allocation/planning
    *Event tracking/planning
    *Habit/Goal Tracking
    *First map out current todo list and google calendar usage, then have it be able to facilitate these behaviours asap
    
-look at current LLM setup and update the prompts and query flow
    *look into JSON prompting (build a test suite to find best way to mix and match LLMs)
    *make sure it will just respond to a natural language query without making a tool call
    *fix the diffs for operations and have the ability to observe the recent ops and undo in current chat(like in cursor)
    *do two LLM calls; one to determine how to respond then the other to respond (plan response then respond)
    *Understand if clarification needed -> Route to agent to perform task or ask for clarification
    *Look into using the thinking mode of the LLM in the best way. Make a router based on complexity? Classify different intents to then route to proper engine
    
    *then add in Habit tracking and chatting with thinking and non-thinking version of LLM



Long term:
-Make unit tests once stable version is here
-Look into DBMS (or better system) for connecting habits, goals, todos, and events
-ask mitchell if I could fine tune models on the dgx (figure out best way to do this)
-kaizen journal integration somehow?